name: BuildAndTest

on:
  push:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: BPCalculatorBOR2021   # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: 'publish'      # set this to the path to your web app project, defaults to the repository root
  AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.BPCalculatorBOR2021_7b8c }}
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 5.0.x
  WORKING_DIRECTORY: BPCalculator

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: windows-latest
    #environment: production

    steps:
      - uses: actions/checkout@v2
      
      - name: Run unit tests      
        run: dotnet test BPCalculatorTests/BPCalculatorTests.csproj --collect "Code coverage" -l:trx
        # restore not required as it's carried out by the previous job        

      - name: Run Acceptance tests      
        run: dotnet test BpAcceptTests/BpAcceptTests.csproj --collect "Code coverage" -l:trx

      - run: |
         dotnet add package SpecFlow.Plus.LivingDocPlugin
         dotnet tool install --global SpecFlow.Plus.LivingDoc.cli
         LivingDoc test-assembly \BpAcceptTests\bin\Debug\netcoreapp3.1\BpAcceptTests.dll -t \BpAcceptTests\bin\Debug\netcoreapp3.1\TestExecution.json
      #- uses: actions/cryptic-wizard/run-specflow-tests@v1.2.0
      #  with:
      #    test-assembly-path: BpAcceptTests/bin/Release/netcoreapp3.1
      #    test-assembly-dll: BpAcceptTests.dll
      #    test-execution-json: TestExecution.json
      #    output-html: LivingDoc.html

      - uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: SpecflowTestResults
          path: LivingDoc.html

      #- name: Build
      #  run: dotnet build --configuration Release --no-restore 
      # call build with restore to get rid of project.assets.json file missing errors
      

      # TODO Check Code Quality

      # TODO Check dependencies OWASP / Whitesource Bolt

      # TODO Deploy to QA
        # Run E2E (Selenium)

      # TODO Deploy to Staging 
        # Run performance tests (k6 cloud)
        # Simple PEN tests (pasive scanning)
        
      # TODO Deploy to prod
        # blue/green, canary
        
      # TODO Telemetry


      - name: Publish
        run: dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp' 

  # Deploy to Azure Web apps
      - name: Run Azure webapp deploy action using publish profile credentials
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ env.AZURE_WEBAPP_PUBLISH_PROFILE  }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          
                  
      - name: Publish Artifacts
        uses: actions/upload-artifact@v1.0.0
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
